;; -*-lisp-*-
;; Load swank.
;;; start swank.
(load "/home/wizard/slime/swank-loader.lisp")
(funcall (read-from-string "swank-loader:init"))
(swank:create-server :port 4009
                     :style swank:*communication-style*
                     :dont-close t
                     :coding-system "utf-8-unix"
                     )

(in-package :stumpwm)

;Load some packges from the git stumpwm contrib directory:

(load "/home/wizard/quicklisp/dists/quicklisp/software/stumpwm-20120107-git/contrib/net.lisp")
(load "/home/wizard/quicklisp/dists/quicklisp/software/stumpwm-20120107-git/contrib/cpu.lisp")


;I set the prefix key to the menu key. This key is easier to type than Ctrl-t:

;; Change the Stumpwm prefix key: Use the menu key
;(set-prefix-key (kbd "Menu"))


;Define a bunch of commands to switch to an already started application or to start it if it is not yet running:

(defcommand emacs () ()
  "run emacs"
  (run-or-raise "emacs" '(:title "emacs")))

(defcommand firefox () ()
  "run firefox"
  (run-or-raise "firefox" '(:class "Firefox")))

(defcommand thunderbird () ()
  "run thunderbird"
  (run-or-raise "thunderbird" '(:title "thunderbird")))

(defcommand aumix () ()
  "run aumix"
  (run-or-raise "xterm -name aumix -e aumix" '(:instance "aumix")))

(defcommand urxvt () ()
  "run urxvt"
  (run-or-raise "urxvt -e tmux" '(:class "URxvt")))

;Turn on the modeline

;; Turn on the modeline
(if (not (head-mode-line (current-head)))
     (toggle-mode-line (current-screen) (current-head)))


;; Show time, cpu usage and network traffic in the modeline
(setf *screen-mode-line-format*
      (list '(:eval (run-shell-command "date '+%R, %F'|tr -d [:cntrl:]" t)) " | %t | %c| %l | [^B%n^b] %W"))


;Select a random background image from a given folder

;; Define the background window
;; (defvar *background-image-path* "/home/wizard/.fvwm")
;; (defun select-random-background-image ()
;;   "Select a random image"
;;   (let ((file-list (directory (concatenate 'string *background-image-path* "*.png")))
;;         (*random-state* (make-random-state t)))
;;     (namestring (nth (random (length file-list)) file-list))))
;; (run-shell-command (concatenate 'string "display -window root " (select-random-background-image)))


;Define some toplevel keybindings. These bindings don't require the prefix key. I use them to switch between my open applications:

(define-key *top-map* (kbd "s-4") "firefox")
(define-key *top-map* (kbd "s-8") "emacs")
(define-key *top-map* (kbd "s-1") "urxvt")
(define-key *top-map* (kbd "s-3") "thunderbird")

(define-key *top-map* (kbd "s-Tab") "pull-hidden-next")
(define-key *top-map* (kbd "s-c") "kill-window")
(define-key *top-map* (kbd "s-l") "run-shell-command xscreensaver-command -lock")
(define-key *top-map* (kbd "Pause") "gother")
(define-key *top-map* (kbd "C-Pause") "grouplist")


;Some keybindings for the defined prefix key:

(define-key *root-map* (kbd "DEL") "repack-window-numbers")
(define-key *root-map* (kbd "i") "list-window-properties")


;Set the mouse policy to focus follows mouse;

(setf *mouse-focus-policy* :sloppy) ;; :click, :ignore, :sloppy


;Create some new virtual desktops (called groups in stumpwm):

(dolist (desk (list "Web" "Media" "Terms" "Work"))
  (run-commands (format nil "gnewbg ~a"  desk)))


;My window placement rules:

;; Clear rules
(clear-window-placement-rules)

(define-frame-preference "Terms"
    (0 t   t :class "URxvt"))

(define-frame-preference "Work"
    (0 t   t :title "thunderbird"))

(define-frame-preference "Default"
  ;; frame raise lock (lock AND raise == jumpto)
  (0 t   t :title "emacs")
  )

(define-frame-preference "Web"
  ;; frame raise lock (lock AND raise == jumpto)
  (0 t   t :class "Firefox"))

(define-frame-preference "Media"
  ;; frame raise lock (lock AND raise == jumpto)
  (0 t   t :instance "aumix")
  (0 t   t :class "MPlayer")
  (0 t   t :class "Avidemux"))

